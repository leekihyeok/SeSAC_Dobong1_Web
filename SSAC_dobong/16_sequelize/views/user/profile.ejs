<!DOCTYPE html>
<html lang="ko">
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

  <body>
    <h1>회원 정보</h1>
    <!-- TODO: href 속성값 설정하기 -->
    <a href="/">HOME</a>
    <a href="/user">이전페이지</a>
    <p>ID 수정 불가능, Password, Name 수정 가능</p>

    <!-- TODO: 각 input의 value 값을 로그인 한 사람의 정보로 채우기 -->
    <form name="form_profile">
      <label for="userid">ID</label>
      <input type="hidden" id="id" value="<%= user.id %>" />
      <!-- readonly: userid는 수정 불가능 (조건임) -->
      <input
        id="userid"
        type="text"
        name="userid"
        value="<%= user.userid %>"
        readonly
      /><br />
      <label for="password">Password</label>
      <input
        id="password"
        type="password"
        name="pw"
        value="<%= user.pw %>"
        required
      /><br />
      <label for="name">Name</label>
      <input
        id="name"
        type="text"
        name="name"
        value="<%= user.name %>"
        required
      /><br />
      <button type="button" onclick="profileEdit();">Edit</button>
      <button type="button" onclick="profileDelete();">Delete</button>
    </form>

    <script>
      // TODO: [Login] 버튼 클릭시 서버에 회원 정보 수정 요청하기
      // POST /user/profile/edit
      async function profileEdit() {
        
        const form = document.forms["form_profile"];
        if(!form.checkValidity()){
          form.reportValidity();
          return;
        }

        const confirmed=confirm('수정하시겠습니까?');
        if(confirmed){
          const res=await axios({
             method: "post",
             url: "/user/profile/edit",
             data: {
               id: form.id.value,
               userid: form.userid.value,
               name: form.name.value,
               pw: form.pw.value,
             },
           });
   
           if(res.status===200){
             alert('수정되었습니다.')
           }else{
             alert('수정 실패되었습니다.')
           }
          
        }
      }

      // TODO: [Login] 버튼 클릭시 서버에 회원 정보 삭제 요청하기
      // POST /user/profile/delete
      async function profileDelete() {
        const form = document.forms["form_profile"];
        console.log(form.id.value);
        const confirmed = confirm("정말 삭제하시겠습니까?한번 삭제한 데이터는 복구가 불가능 합니다.");
        if (confirmed) {
          const res = await axios({
            method: "post",
            url: "/user/profile/delete",
            data: { id: form.id.value },
          });
          if (res.status===200) {
            alert("삭제가 완료되었습니다.");
            window.location.href = "/user/signin";
          }
        }
      }
    </script>
  </body>
</html>
